import dotenv from "dotenv";
import express from "express";
import bodyParser from "body-parser";
import mongodb from "mongodb";
import { sendConfirmationEmail } from "./veriEmailSender.js";
import path from "path";
import { fileURLToPath } from "url";
const __dirname = path.dirname(fileURLToPath(import.meta.url));

const { MongoClient } = mongodb;
const app = express();
dotenv.config();
app.use(bodyParser.json());
app.set("view engine", "ejs");

MongoClient.connect(
  `mongodb+srv://siboyang:${process.env.db_password}@cluster0.iot5g.mongodb.net/MailingList?retryWrites=true&w=majority`,
  { useUnifiedTopology: true }
)
  .then((client) => {
    console.log("Connected to Database");
    const db = client.db("MailingList");
    const users = db.collection("list");

    /**
     * request body:
     * {active: boolean, active_code: string (active code is generated by frontend)}
     */
    app.post("/subscribe", async (req, res) => {
      try {
        const new_sub = req.body;
        new_sub._id = new_sub.email;
        const created_user = await users.insertOne(new_sub);
        console.log("One user subscribed. Waiting for verification");
        sendConfirmationEmail(
          new_sub.firstName,
          new_sub.email,
          new_sub.activeCode
        );
        res.status(201).json(created_user);
      } catch (e) {
        if (e.code === 11000) {
          res.status(409).json({ error: "Email already exist" });
        } else {
          res.status(500).json({ error: "Something goes wrong." });
        }
      }
    });

    app.delete("/unsubscribe", async (req, res) => {
      try {
        const id = req.body;
        const user_removed = await users.findOneAndDelete(id);
        if (user_removed.value === null) {
          res.status(404).json({ error: "Email not found" });
        } else {
          console.log("one user unsubscribed.");
          res.status(200).json(user_removed.value);
        }
      } catch (e) {
        console.log(e);
      }
    });

    app.get("/verification", async (req, res) => {
      try {
        const email = req.query.email;
        const code = req.query.code;
        const user = await users.findOne({ _id: email });
        if (user.activeCode === code) {
          await users.updateOne({ _id: email }, { $set: { active: true } });
          console.log("One user verified.");
          res
            .status(200)
            .sendFile(path.join(__dirname + "/views/success.html"));
        } else {
          res.status(200).sendFile(path.join(__dirname + "/views/fail.html"));
        }
      } catch (e) {
        console.log(e);
        res.status(500).json({ error: "Something goes wrong." });
      }
    });
  })
  .catch((error) => console.error(error));

app.listen(3000, () => {
  console.log("listening on 3000");
});
